{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tccra\\\\Personal-Projects\\\\purpose-driven-community\\\\purpose-driven-community\\\\react-app\\\\src\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport UserContext from \"./context/UserContext\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm(_ref) {\n  _s();\n\n  let {\n    setUser\n  } = _ref;\n  const navigate = useNavigate(); //const user = useContext(UserContext);\n\n  const [email, setEmail] = useState(\"\");\n\n  const loginUser = async e => {\n    e.preventDefault();\n    console.log(email); // const OUR_DB_URL = `http://localhost:3001/users/${email}`;\n\n    const response = await fetch(`${process.env.REACT_APP_OUR_DB_URL}users/${email}`);\n    const data = await response.json();\n    console.log(data);\n\n    if (data) {\n      setUser({\n        username: data.email,\n        isAuthenticated: true\n      });\n      navigate(`/userprofile`);\n    } else {\n      navigate(`/`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"justify-content-md-center\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: loginUser,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"center\",\n          children: \" SQLDaddy Bookclub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            name: \"email\",\n            id: \"email\",\n            onChange: e => {\n              setEmail(e.target.value);\n              console.log(email);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginForm, \"yGHs7W6rUk6h2xensv9vkiPLYlc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","UserContext","Form","Button","Row","Col","LoginForm","setUser","navigate","email","setEmail","loginUser","e","preventDefault","console","log","response","fetch","process","env","REACT_APP_OUR_DB_URL","data","json","username","isAuthenticated","target","value"],"sources":["C:/Users/tccra/Personal-Projects/purpose-driven-community/purpose-driven-community/react-app/src/LoginForm.js"],"sourcesContent":["import React, {useState, useContext} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport {Form, Button, Row, Col} from \"react-bootstrap\";\r\n\r\nexport default function LoginForm({setUser}) {\r\n    const navigate = useNavigate();\r\n    //const user = useContext(UserContext);\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const loginUser = async (e) => {\r\n        e.preventDefault();\r\n        console.log(email);\r\n        // const OUR_DB_URL = `http://localhost:3001/users/${email}`;\r\n        const response = await fetch(\r\n            `${process.env.REACT_APP_OUR_DB_URL}users/${email}`\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        if (data) {\r\n            setUser({username: data.email, isAuthenticated: true});\r\n            navigate(`/userprofile`);\r\n        } else {\r\n            navigate(`/`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={6}>\r\n                <Form onSubmit={loginUser}>\r\n                    <h2 className=\"center\"> SQLDaddy Bookclub</h2>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            onChange={(e) => {\r\n                                setEmail(e.target.value);\r\n                                console.log(email);\r\n                            }}\r\n                        />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAqC,iBAArC;;AAEA,eAAe,SAASC,SAAT,OAA8B;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EACzC,MAAMC,QAAQ,GAAGR,WAAW,EAA5B,CADyC,CAEzC;;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMa,SAAS,GAAG,MAAOC,CAAP,IAAa;IAC3BA,CAAC,CAACC,cAAF;IACAC,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAF2B,CAG3B;;IACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CACvB,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,SAAQX,KAAM,EAD1B,CAA5B;IAGA,MAAMY,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;IACAR,OAAO,CAACC,GAAR,CAAYM,IAAZ;;IACA,IAAIA,IAAJ,EAAU;MACNd,OAAO,CAAC;QAACgB,QAAQ,EAAEF,IAAI,CAACZ,KAAhB;QAAuBe,eAAe,EAAE;MAAxC,CAAD,CAAP;MACAhB,QAAQ,CAAE,cAAF,CAAR;IACH,CAHD,MAGO;MACHA,QAAQ,CAAE,GAAF,CAAR;IACH;EACJ,CAfD;;EAiBA,oBACI,QAAC,GAAD;IAAK,SAAS,EAAC,2BAAf;IAAA,uBACI,QAAC,GAAD;MAAK,EAAE,EAAE,CAAT;MAAA,uBACI,QAAC,IAAD;QAAM,QAAQ,EAAEG,SAAhB;QAAA,wBACI;UAAI,SAAS,EAAC,QAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,MAAtB;UAAA,wBACI,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;YACI,IAAI,EAAC,OADT;YAEI,WAAW,EAAC,aAFhB;YAGI,IAAI,EAAC,OAHT;YAII,EAAE,EAAC,OAJP;YAKI,QAAQ,EAAGC,CAAD,IAAO;cACbF,QAAQ,CAACE,CAAC,CAACa,MAAF,CAASC,KAAV,CAAR;cACAZ,OAAO,CAACC,GAAR,CAAYN,KAAZ;YACH;UARL;YAAA;YAAA;YAAA;UAAA,QAFJ,eAYI,QAAC,IAAD,CAAM,IAAN;YAAW,SAAS,EAAC,YAArB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAZJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAmBI,QAAC,MAAD;UAAQ,OAAO,EAAC,SAAhB;UAA0B,IAAI,EAAC,QAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA6BH;;GAnDuBH,S;UACHN,W;;;KADGM,S"},"metadata":{},"sourceType":"module"}